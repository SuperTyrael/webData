# Generated by Django 4.0.3 on 2022-03-27 13:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Module',
            fields=[
                ('module_code', models.CharField(max_length=60, primary_key=True, serialize=False)),
                ('module_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModuleInstance',
            fields=[
                ('moduleInstance_id', models.AutoField(primary_key=True, serialize=False)),
                ('moduleInstance_year', models.IntegerField()),
                ('moduleInstance_semester', models.IntegerField()),
                ('moduleInstance_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.module')),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('professor_id', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('professor_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rate', models.IntegerField(default=0)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.moduleinstance')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.professor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='moduleinstance',
            name='moduleInstance_professor',
            field=models.ManyToManyField(to='rate.professor'),
        ),
    ]
